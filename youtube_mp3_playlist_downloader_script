urldownloader.py:

import time

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from downloader import single_tab

import single_window_download as swd


def open_link(url_id):
    browser = webdriver.Chrome()
    url_template = "https://www.youtube.com/playlist?list={}"
    search_url = url_template.format(url_id)
    browser.get(search_url)
    # play = browser.find_element_by_xpath(
    #     "/html/body/ytd-app/div/ytd-page-manager/ytd-browse/ytd-playlist-sidebar-renderer/div/ytd-playlist-sidebar-primary-info-renderer/ytd-playlist-thumbnail/a/div[2]/ytd-thumbnail-overlay-side-panel-renderer/yt-formatted-string")
    # play.click()
    #
    title_xpath = r'//*[@id="video-title"]'
    videonames = list()

    pause = 0.5

    for i in range(5):  # customizable by formula total songs/100

        html = browser.find_element_by_tag_name('html')
        html.send_keys(Keys.END)
        time.sleep(2)

    try:
        WebDriverWait(browser, 100).until(expected_conditions.presence_of_all_elements_located((By.XPATH, title_xpath)))
        # WebDriverWait(browser, 100).until(expected_conditions.visibility_of_any_elements_located((By.XPATH, title_xpath)))

        videos = browser.find_elements_by_xpath(title_xpath)

        for video in videos:
            if video.text == "[Deleted video]":
                print("Deleted Video")
                continue
            videonames.append(video.text)

    except:
        print("title not found")

    finally:
        print(videonames)
        print(len(videonames))

        brw = swd.single(videonames, browser)
        return brw


# Browser=open_link("PLXszzEc_1_nmxcv1kQIJd_sQGsUmipvC5") Rap Playlist
Browser = open_link("PLXszzEc_1_nleR75A4tBlQguJ2930JQsj")



--------------------------------------------------------------------------------------------------------
single_window_download.py

from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait

tab_number = 0


def single(song_names, driver_obj):
    global tab_number
    songs = song_names
    songs_not_downloaded = list()
    browser = driver_obj
    song_num = 0
    url_template = "https://www.youtube.com/results?search_query={}"
    for song in song_names:
        # if tab_number == 0:
        #     # browser.find_element_by_tag_name('body').send_keys(Keys.CONTROL + 't')
        #     # browser.find_element_by_tag_name('body').send_keys(Keys.CONTROL + Keys.TAB)
        #     tab_number += 1
        # else:
        #     tab_number += 1
        # tab_number += 1
        search_url = url_template.format(song)
        print(search_url)
        browser.switch_to.window(browser.window_handles[0])
        browser.get(search_url)
        video = browser.find_element_by_id("img")
        try:
            video.click()  # here error sometimes
        except:
            songs_not_downloaded.append(song)
            continue

        video_url = browser.current_url
        print(video_url)
        browser.get("https://ytmp3.cc/en13/")
        search_box = browser.find_element_by_id("input")
        search_box.send_keys(video_url + Keys.RETURN)
        # download_element_flag = False
        # download = browser.find_element_by_partial_link_text("Download")

        # here chroe notification aint alert box
        try:
            WebDriverWait(browser,10).until(
                expected_conditions.visibility_of_element_located((By.XPATH, r'//*[@id="buttons"]/a[1]')))
            download = browser.find_element_by_link_text("Download")
            download.click()
        except:
            print("Download button not found")
            songs_not_downloaded.append(song)
            continue

        #

        try:
            # WebDriverWait(browser, 5).until(expected_conditions.new_window_is_opened)
            browser.switch_to.window(browser.window_handles[1])
            browser.close()
        except:
            print("NO AD HURRAH")
        finally:
            song_num += 1
            print(song, "has been completed")
            print("total songs done=", song_num)
            # browser.find_element_by_tag_name('body').send_keys(Keys.CONTROL + 't')
            # browser.find_element_by_tag_name('body').send_keys(Keys.CONTROL + Keys.TAB)
    print("Songs ERROR:", len(songs_not_downloaded),"Names", songs_not_downloaded)
    return browser
# driver.close()
